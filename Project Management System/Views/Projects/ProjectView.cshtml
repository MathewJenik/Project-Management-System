@model Project_Management_System.Data.Project

@{
    ViewData["Title"] = "ProjectView";
}

<link rel="stylesheet" href="~/css/jquery-ui/jquery-ui.css">

<h1>ProjectView</h1>

<div>
    <h4>Project</h4>
    <hr />

    @{
        if (Model.Tasks.Count > 0)
        {
            <div class="projectTaskBoard row">
                
                    <div class="col">
                        <h4>Incomplete</h4>
                        <ul id="incompleteTaskList" class="connectedSortable projectTaskList">

                            @foreach (var p in Model.Tasks.Where(t => t.Status.Name == "Incomplete"))
                            {



                                <li plid="@p.ID" id="@p.ID" class="projectTaskLI">


                                    <div class="accordion md-accordion" role="tablist" aria-multiselectable="true" id="accordion_@p.ID">
                                        <div class="card">
                                            <div class="card-header" id="heading_@p.ID" role="tab">
                                                
                                                    <a data-toggle="collapse" href="#collapse_@p.ID" aria-expanded="true"
                                                       aria-controls="collapse_@p.ID" onclick="rotateAccordionIconByElement('accIcon_@p.ID'),onLoadSetProgress(@p.ID)">
                                                        <h5 class="mb-0">

                                                            <i id="infoIcon_@p.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@p.Description" data-trigger="hover" data-placement="top"></i>

                                                            @p.Name <i id="accIcon_@p.ID" class="fa fa-angle-down rotate-accordion-arrow"></i>


                                                        </h5>


                                                    </a>


                                                <div class="linebreak-hr"></div>
                                                <div class="taskIcons">

                                                    <a onclick="loadDelete(@p.ID, '@p.Name')">
                                                        <i id="deleteIcon_@p.ID" class="fa fa-trash nospacing blue-icon float-right"></i>
                                                    </a>


                                                    <a>
                                                        <i id="moveIcon_@p.ID" class="fa fa-arrows-alt nospacing blue-icon rotate-45"></i>
                                                    </a>
                                                </div>
                                            </div>

                                            <div id="collapse_@p.ID" class="collapse" aria-labelledby="heading_@p.ID" data-parent="#accordion_@p.ID">
                                                <div class="card-body">

                                                    <p class="tinyText">Progress:</p>
                                                    <div class="progress">
                                                        <div id="taskProgressBar_@p.ID" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                                                    </div>
                                                    <div id="subTaskContainer_@p.ID">
                                                        @{
                                                            if (p.SubTasks.Count == 0)
                                                            {
                                                                //<text>No Sub Tasks.</text>
                                                            }
                                                            else
                                                            {
                                                                
                                                                foreach (var st in p.SubTasks)
                                                                {
                                                                    var checkboxStatus = true; if (st.Status.Name == "Incomplete") { checkboxStatus = false; }
                                                                    <div id="projSubTask_@st.ID">
                                                                        <hr />

                                                                        <Text>
                                                                            <p class="subtask">
                                                                                <i id="subTaskDeleteIcon_@st.ID" class="fa fa-trash nospacing blue-icon" onclick="subTaskLoadDelete(@st.ID, @p.ID)"></i>
                                                                                Completed: <input id="subTaskCompleteInput_@st.ID" type="checkbox" onclick="changeSubTaskCompleted(@st.ID, @p.ID)" checked="@checkboxStatus" />
                                                                                <i id="subTaskInfoIcon_@st.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@st.Description" data-trigger="hover" data-placement="top"></i>

                                                                                @st.Name

                                                                            </p>
                                                                        </Text>
                                                                    </div>
                                                                    
                                                                }

                                                            }
                                                        }
                                                    </div>
                                                    <button type="button" class="btn btn-light" data-toggle="modal" data-target="#newSubTaskModal_@p.ID">Create a New Sub Task</button>

                                                    <div class="modal fade" id="newSubTaskModal_@p.ID" tabindex="1" roles="dialog" aria-labelledby="newSubTaskModalTitle_@p.ID" aria-hidden="true">
                                                        <div class="modal-dialog" role="document">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="newSubTaskModalTitle_@p.ID"> Create A New Sub Task? </h5>
                                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                </div>
                                                                <div class="modal-body">

                                                                    <p>Name: <input type="text" id="subTaskCreateName_@p.ID" /></p>
                                                                    <p>Description: <input type="text" id="subTaskCreateDescription_@p.ID" /></p>
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                                    <button type="button" class="btn btn-primary" onclick="createNewSubTask(@p.ID)" data-dismiss="modal">Create</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>



                                                </div>
                                            </div>
                                        </div>

                                    </div>



                                </li>


                            }

                        </ul>
                        
                        
                        
                    </div>

                <div class="col">
                    <h4>In-Progress</h4>
                    <ul id="inProgressTaskList" class="connectedSortable projectTaskList">

                        @foreach (var p in Model.Tasks.Where(t => t.Status.Name == "InProgress"))
                        {



                            <li plid="@p.ID" id="@p.ID" class="projectTaskLI">


                            <div class="accordion md-accordion" role="tablist" aria-multiselectable="true" id="accordion_@p.ID">
                                <div class="card">
                                    <div class="card-header" id="heading_@p.ID" role="tab">

                                        <a data-toggle="collapse" href="#collapse_@p.ID" aria-expanded="true"
                                           aria-controls="collapse_@p.ID" onclick="rotateAccordionIconByElement('accIcon_@p.ID'),onLoadSetProgress(@p.ID)">
                                            <h5 class="mb-0">

                                                <i id="infoIcon_@p.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@p.Description" data-trigger="hover" data-placement="top"></i>

                                                @p.Name <i id="accIcon_@p.ID" class="fa fa-angle-down rotate-accordion-arrow"></i>


                                            </h5>


                                        </a>


                                        <div class="linebreak-hr"></div>
                                        <div class="taskIcons">

                                            <a onclick="loadDelete(@p.ID, '@p.Name')">
                                                <i id="deleteIcon_@p.ID" class="fa fa-trash nospacing blue-icon float-right"></i>
                                            </a>


                                            <a>
                                                <i id="moveIcon_@p.ID" class="fa fa-arrows-alt nospacing blue-icon rotate-45"></i>
                                            </a>
                                        </div>
                                    </div>

                                    <div id="collapse_@p.ID" class="collapse" aria-labelledby="heading_@p.ID" data-parent="#accordion_@p.ID">
                                        <div class="card-body">

                                            <p class="tinyText">Progress:</p>
                                            <div class="progress">
                                                <div id="taskProgressBar_@p.ID" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                                            </div>
                                            <div id="subTaskContainer_@p.ID">
                                                @{
                                                    if (p.SubTasks.Count == 0)
                                                    {
                                                        //<text>No Sub Tasks.</text>
                                                    }
                                                    else
                                                    {

                                                        foreach (var st in p.SubTasks)
                                                        {
                                                            var checkboxStatus = true; if (st.Status.Name == "Incomplete") { checkboxStatus = false; }
                                                            <div id="projSubTask_@st.ID">
                                                                <hr />

                                                                <Text>
                                                                    <p class="subtask">
                                                                        <i id="subTaskDeleteIcon_@st.ID" class="fa fa-trash nospacing blue-icon" onclick="subTaskLoadDelete(@st.ID, @p.ID)"></i>
                                                                        Completed: <input id="subTaskCompleteInput_@st.ID" type="checkbox" onclick="changeSubTaskCompleted(@st.ID, @p.ID)" checked="@checkboxStatus" />
                                                                        <i id="subTaskInfoIcon_@st.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@st.Description" data-trigger="hover" data-placement="top"></i>

                                                                        @st.Name

                                                                    </p>
                                                                </Text>
                                                            </div>

                                                        }

                                                    }
                                                }
                                            </div>
                                            <button type="button" class="btn btn-light" data-toggle="modal" data-target="#newSubTaskModal_@p.ID">Create a New Sub Task</button>

                                            <div class="modal fade" id="newSubTaskModal_@p.ID" tabindex="1" roles="dialog" aria-labelledby="newSubTaskModalTitle_@p.ID" aria-hidden="true">
                                                <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title" id="newSubTaskModalTitle_@p.ID"> Create A New Sub Task? </h5>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                        <div class="modal-body">

                                                            <p>Name: <input type="text" id="subTaskCreateName_@p.ID" /></p>
                                                            <p>Description: <input type="text" id="subTaskCreateDescription_@p.ID" /></p>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                            <button type="button" class="btn btn-primary" onclick="createNewSubTask(@p.ID)" data-dismiss="modal">Create</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>

                            </div>



                        </li>


                        }

                    </ul>
                </div>

                <div class="col">
                    <h4>Completed</h4>
                    <ul id="completeTaskList" class="connectedSortable projectTaskList">

                        @foreach (var p in Model.Tasks.Where(t => t.Status.Name == "Complete"))
                        {


                        
                        <li plid="@p.ID" id="@p.ID" class="projectTaskLI">


                            <div class="accordion md-accordion" role="tablist" aria-multiselectable="true" id="accordion_@p.ID">
                                <div class="card">
                                    <div class="card-header" id="heading_@p.ID" role="tab">

                                        <a data-toggle="collapse" href="#collapse_@p.ID" aria-expanded="true"
                                           aria-controls="collapse_@p.ID" onclick="rotateAccordionIconByElement('accIcon_@p.ID'),onLoadSetProgress(@p.ID)">
                                            <h5 class="mb-0">

                                                <i id="infoIcon_@p.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@p.Description" data-trigger="hover" data-placement="top"></i>

                                                @p.Name <i id="accIcon_@p.ID" class="fa fa-angle-down rotate-accordion-arrow"></i>


                                            </h5>


                                        </a>


                                        <div class="linebreak-hr"></div>
                                        <div class="taskIcons">

                                            <a onclick="loadDelete(@p.ID, '@p.Name')">
                                                <i id="deleteIcon_@p.ID" class="fa fa-trash nospacing blue-icon float-right"></i>
                                            </a>


                                            <a>
                                                <i id="moveIcon_@p.ID" class="fa fa-arrows-alt nospacing blue-icon rotate-45"></i>
                                            </a>
                                        </div>
                                    </div>

                                    <div id="collapse_@p.ID" class="collapse" aria-labelledby="heading_@p.ID" data-parent="#accordion_@p.ID">
                                        <div class="card-body">

                                            <p class="tinyText">Progress:</p>
                                            <div class="progress">
                                                <div id="taskProgressBar_@p.ID" class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="100" aria-valuemax="100">100%</div>
                                            </div>
                                            <div id="subTaskContainer_@p.ID">
                                                @{
                                                    if (p.SubTasks.Count == 0)
                                                    {
                                                        //<text>No Sub Tasks.</text>
                                                    }
                                                    else
                                                    {

                                                        foreach (var st in p.SubTasks)
                                                        {
                                                            var checkboxStatus = true; if (st.Status.Name == "Incomplete") { checkboxStatus = false; }
                                                            <div id="projSubTask_@st.ID">
                                                                <hr />

                                                                <Text>
                                                                    <p class="subtask">
                                                                        <i id="subTaskDeleteIcon_@st.ID" class="fa fa-trash nospacing blue-icon" onclick="subTaskLoadDelete(@st.ID, @p.ID)"></i>
                                                                        Completed: <input id="subTaskCompleteInput_@st.ID" type="checkbox" onclick="changeSubTaskCompleted(@st.ID, @p.ID)" checked="@checkboxStatus" />
                                                                        <i id="subTaskInfoIcon_@st.ID" class="fa fa-info-circle nospacing blue-icon circle-icon" data-toggle="popover" title="Description" data-content="@st.Description" data-trigger="hover" data-placement="top"></i>

                                                                        @st.Name

                                                                    </p>
                                                                </Text>
                                                            </div>

                                                        }

                                                    }
                                                }
                                            </div>
                                            <button type="button" class="btn btn-light" data-toggle="modal" data-target="#newSubTaskModal_@p.ID">Create a New Sub Task</button>

                                            <div class="modal fade" id="newSubTaskModal_@p.ID" tabindex="1" roles="dialog" aria-labelledby="newSubTaskModalTitle_@p.ID" aria-hidden="true">
                                                <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title" id="newSubTaskModalTitle_@p.ID"> Create A New Sub Task? </h5>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                        <div class="modal-body">

                                                            <p>Name: <input type="text" id="subTaskCreateName_@p.ID" /></p>
                                                            <p>Description: <input type="text" id="subTaskCreateDescription_@p.ID" /></p>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                            <button type="button" class="btn btn-primary" onclick="createNewSubTask(@p.ID)" data-dismiss="modal">Create</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>

                            </div>



                        </li>

                        }

                    </ul>
                </div>
            </div>
            
        }

    }


    <form asp-action="CreateTask">
        <div class="form-group">

            <input type="hidden" name="projectID" value="@Model.ID" class="form-control" />

        </div>
        <div class="form-group">
            <input type="submit" value="Create a new Task" class="btn btn-primary" />
        </div>
    </form>


</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>



@section scripts {
    <!--<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        -->
    
    <script src="~/lib/jquery-ui/jquery-ui.js"></script>
    
    <script>
        $(function () {
            $("#incompleteTaskList, #inProgressTaskList, #completeTaskList").sortable({
                connectWith: ".connectedSortable",
                update: function (event, ui) {
                    //db id of the item sorted
                    //alert(ui.item.attr('plid'));
                    //db id of the item next to which the dragged item was dropped
                    //alert(ui.item.prev().attr('plid'));
        ////
                    /*
                    // POST to server using $.post or $.ajax
                    $.post("../../ProjectsController/UpdateProjTaskStatus/",
                        {
                            Name: "Test",
                            Projectid: "1"
                        });
                        */
                    var status = $(ui.item).parent().attr('id').split("TaskList");
                    //alert("Status: " + status);

                    $.ajax({
                        type: "POST",
                        url: "/Projects/UpdateProjTaskStatus/test",
                        data: { id: ui.item.attr('plid'), status: status, projectId: @Model.ID},

                        success: function (response) {
                            if (response != null) {

                                // make sure the status of the task is now set to complete
                                if (status == "complete,") {
                                    // get the current tasks ID.
                                    var currentID = ui.item.attr('id');

                                    // call function to set the progress to complete.
                                    setProgressComplete(currentID, false);
                                }
                                else {
                                    onLoadSetProgress(ui.item.attr('id'));
                                }
                            } else {

                            }
                        },
                        failure: function (response) {

                        },
                        error: function (response) {

                        }
                    });


                },
            }).disableSelection();
        });

        //function to rotate the accordian icon used within the ui. This icon is used to say open and closed, when tasks are opened or closed.
        function rotateAccordionIconByElement(elementName) {
            $(document.getElementById(elementName)).toggleClass("down");
        }

        // jquery function to stop propagation of elements.
        function loadInformation(description, elementName) {

            $(document.getElementById(elementName)).click(function (e) {
                alert(description);

                e.stopPropagation();

            })

        }

        //function to delete the selected task
        function loadDelete(id, name) {


            //confirmation message to make sure user wants to make this change.
            if (confirm('Are you sure you want to delete this task?')) {

                // ajax call to delete the item from the db

                $.ajax({
                    type: "POST",
                    url: "/Projects/DeleteProjTask",
                    data: { projTaskID: id },

                    success: function (response) {
                        // remove the child from the list.
                        var li = document.getElementById(name);
                        document.getElementById(name).parentNode.removeChild(li);

                        if (response != null) {

                        } else {

                        }
                    },
                    failure: function (response) {

                    },
                    error: function (response) {

                    }
                });

            } else {


            }

        }




        // function to create a mew subtask.
        function createNewSubTask(ID) {
            var Name = document.getElementById("subTaskCreateName_"+ID).value;
            var Description = document.getElementById("subTaskCreateDescription_" + ID).value;
            console.log(document.getElementById("subTaskCreateName_" + ID));

            //ajax call too get the required data and to create the subtask in the database


            $.ajax({
                type: "GET",
                url: "/Projects/ApiCreateSubTask",
                data: { taskID: ID, name: Name, description: Description },

                success: function (response) {
                    if (response != null) {

                        var res = JSON.stringify(response);
                        var obj = JSON.parse(res);
                        var task = document.getElementById("subTaskContainer_" + ID);

                        // adding the required html to the list.
                        task.innerHTML += "<div id='projSubTask_"+obj.stID+"'><hr/><p class='subtask'> <i id='subTaskDeleteIcon_"+obj.stID+"' class='fa fa-trash nospacing blue-icon' onclick='subTaskLoadDelete("+obj.stID+","+ ID+")'></i> Completed: <input id='subTaskCompleteInput_" + obj.stID + "' type='checkbox' onclick='changeSubTaskCompleted(" + obj.stID + "," + ID + ")' /> " + " " + " <i id='subTaskInfoIcon_" + obj.stID + "' class='fa fa-info-circle nospacing blue-icon circle-icon' data-toggle='popover' data-original-title='Description' data-content='" + Description + "' data-trigger='hover' data-placement='top'></i>" + " " + Name + " " + "</p></div>";
                        //var checkbox = task.getElementByID("subTaskCompleteInput_" + obj.stID);
                        //checkbox.checked

                        // enabling the newly added popover.
                        $(function () {
                            $('[data-toggle="popover"]').popover()
                        })

                        //reload the progress bar, to set the new progress since a new subtask has been added.
                        onLoadSetProgress(ID);



                    } else {
                        //alert("Something went wrong");
                    }
                },
                failure: function (response) {
                    //alert(response.responseText);
                    //alert("failed");
                },
                error: function (response) {
                    //alert(response.responseText);
                    // alert("error");
                }
            });



        }



        // function delete subtask
        function subTaskLoadDelete(subTaskID, taskID) {
            var name = "projSubTask_" + subTaskID;

            //confirmation message to make sure user wants to make this change.
            if (confirm('Are you sure you want to delete this Sub Task?')) {

                // ajax call to delete the item from the db

                $.ajax({
                    type: "POST",
                    url: "/Projects/APIDeleteSubTask",
                    data: { subTaskID: subTaskID },

                    success: function (response) {
                        // remove the subtask from the project task.
                        var element = document.getElementById(name);
                        element.innerHTML = "";

                        // reload the progress bar

                        onLoadSetProgress(taskID);
                        if (response != null) {

                        } else {

                        }
                    },
                    failure: function (response) {

                    },
                    error: function (response) {

                    }
                });

            } else {


            }
        }


        // change subtask complete
        function changeSubTaskCompleted(SubTaskID, TaskID) {
            // get the sub task
            var st = document.getElementById("subTaskCompleteInput_" + SubTaskID);
            // get the tasks progress bar and empty the text
            var progressBar = document.getElementById("taskProgressBar_" + TaskID);
            //progressBar.innerHTML = "";

            var completed = st.checked;

            // api call to change the status of the task.
            $.ajax({
                type: "POST",
                url: "/Projects/ApiChangeSubTaskStatus",
                data: { subTaskID: SubTaskID, completed: completed },

                success: function (response) {
                    if (response != null) {

                        // api call to get the required details and assign them to there respective variables.

                        var totalSubTasks = 0;
                        var totalCompleteTasks = 1;

                        $.ajax({
                            type: "GET",
                            url: "/Projects/ApiGetSubTaskProgressDetails",
                            data: { taskID: TaskID },

                            success: function (response) {
                                if (response != null) {

                                    var res = JSON.stringify(response);
                                    //RESPONSE: { "totalSubTasks": 2, "totalCompleteTasks": 2 }
                                    //alert("RESPONSE: " + res);

                                    var obj = JSON.parse(res);

                                    totalSubTasks = obj.totalSubTasks;
                                    totalCompleteTasks = obj.totalCompleteTasks;
                                    //alert("totalST : " + totalSubTasks + " totalIT : " + totalCompleteTasks)
                                    // set the progress bar to the correct amount
                                    progressBar.style.width = (((totalCompleteTasks / totalSubTasks) * 100) + "%");
                                    //alert("IF : " + ((totalCompleteTasks / totalSubTasks) * 100) + "%");
                                    progressBar.innerHTML = ((totalCompleteTasks / totalSubTasks) * 100) + "%";

                                } else {

                                }
                            },
                            failure: function (response) {

                            },
                            error: function (response) {

                            }
                        });

                    } else {

                    }
                },
                failure: function (response) {
                    //alert(response.responseText);
                    //alert("failed");
                },
                error: function (response) {
                    //alert(response.responseText);
                    // alert("error");
                }
            });


        }

        // function to
        function setProgressComplete(TaskID, removeClass) {
            // jquery to turn the progress bar green, to the success state.

            if (removeClass == false) {
                // get the tasks progress bar and empty the text
                var progressBar = document.getElementById("taskProgressBar_" + TaskID)
                progressBar.style.width = "100%";


                progressBar.innerText = "100%";
                $(document.getElementById("taskProgressBar_" + TaskID)).addClass("bg-success");
            } else {
                $(document.getElementById("taskProgressBar_" + TaskID)).removeClass("bg-success");
            }

        }

        // function to set the progress of each task on load, or when required.
        function onLoadSetProgress(TaskID) {

            // get the tasks progress bar and empty the text
            var progressBar = document.getElementById("taskProgressBar_" + TaskID)


            // api call to get the required details and assign them to there respective variables.

            var totalSubTasks = 0;
            var totalCompleteTasks = 1;
            var taskStatus = "incomplete"

            $.ajax({
                type: "GET",
                url: "/Projects/ApiGetSubTaskProgressDetails",
                data: { taskID: TaskID },

                success: function (response) {
                    if (response != null) {

                        var res = JSON.stringify(response);
                        //RESPONSE: { "totalSubTasks": 2, "totalCompleteTasks": 2 }
                        //alert("RESPONSE: " + res);

                        var obj = JSON.parse(res);

                        totalSubTasks = obj.totalSubTasks;
                        totalCompleteTasks = obj.totalCompleteTasks;
                        //alert("totalST : " + totalSubTasks + " totalIT : " + totalCompleteTasks)
                        // set the progress bar to the correct amount
                        progressBar.style.width = (((totalCompleteTasks / totalSubTasks) * 100) + "%");
                        //alert("IF : " + ((totalCompleteTasks / totalSubTasks) * 100) + "%");
                        progressBar.innerHTML = ((totalCompleteTasks / totalSubTasks) * 100) + "%";

                        // if for any reason the number cannot be calculated, mainly due to no subtasks being made, set the progress bar to 0.
                        if (isNaN(((totalCompleteTasks / totalSubTasks) * 100))) {
                            progressBar.style.width = 0;
                            progressBar.innerHTML = "0";
                        }

                        //set the tasks status
                        taskStatus = obj.taskStatus;

                        //check the status of the task
                        if (taskStatus == "complete") {
                            // set the values required for the complete status
                            progressBar.style.width = "100%";
                            progressBar.innerHTML = "100%";
                            $(progressBar).addClass("bg-success");

                        } else {
                            $(progressBar).removeClass("bg-success");

                        }

                    } else {

                    }
                },
                failure: function (response) {

                },
                error: function (response) {

                }
            });


        }

        //


        //enable popovers on the page:
        $(function () {
            $('[data-toggle="popover"]').popover()
        })


    </script>
} 






